/* -----------------------------------------------------------------------------

  HAMBURGER ICONS COMPONENT
  
----------------------------------------------------------------------------- */

// vars
$button-width: 45px; // The width of the button area
$button-height: 45px; // The height of the button area
$bar-thickness: 3px; // The thickness of the button bars
$button-pad: 10px; // The left/right padding between button area and bars.
$button-bar-space: 5px; // The spacing between button bars
$button-transistion-duration: 0.2s; // The transition duration

/**
 * Toggle Switch Globals
 *
 * All switches should take on the class `hamburger` as well as their
 * variant that will give them unique properties. This class is an overview
 * class that acts as a reset for all versions of the icon.
 */

.hamburger {
    display: block;
    position: relative;
    overflow: hidden;
    margin: 0;
    padding: 0;
    width: $button-width;
    height: $button-height;
    font-size: 0;
    text-indent: -9999px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    box-shadow: none;
    border-radius: none;
    border: none;
    cursor: pointer;
    transition: background $button-transistion-duration;
}

.hamburger:focus {
    outline: none;
}

.hamburger span {
    display: block;
    position: absolute;
    top: ($button-height / 2) - ($bar-thickness / 2);
    left: $button-pad;
    right: $button-pad;
    height: $bar-thickness;
    background: rgb(255, 255, 255);
}

.hamburger span::before,
.hamburger span::after {
    position: absolute;
    display: block;
    left: 0;
    width: 100%;
    height: $bar-thickness;
    background-color: #fff;
    content: "";
}

.hamburger span::before {
    top: -$bar-thickness - $button-bar-space;
}

.hamburger span::after {
    bottom: -$bar-thickness - $button-bar-space;
}


/**
 * 
 * Hamburger to "x" (htx). Takes on a hamburger shape, bars slide
 * down to center and transform into an "x".
 */

.hamburger {
    background-color: rgb(255, 50, 100);
}

.hamburger span {
    transition: background 0s $button-transistion-duration;
}

.hamburger span::before,
.hamburger span::after {
    transition-duration: $button-transistion-duration, $button-transistion-duration;
    transition-delay: $button-transistion-duration, 0s;
}

.hamburger span::before {
    transition-property: top, transform;
}

.hamburger span::after {
    transition-property: bottom, transform;
}


/* active state, i.e. menu open */

.hamburger.is-active {
    background-color: darken(rgb(255, 50, 100), 20%);
}

.hamburger.is-active span {
    background: none;
}

.hamburger.is-active span::before {
    top: 0;
    //transform: rotate(45deg);
    transform: translate3d(0, 0, 0) rotate(45deg);
}

.hamburger.is-active span::after {
    bottom: 0;
    //transform: rotate(-45deg);
    transform: translate3d(0, 0, 0) rotate(-45deg);
}

.hamburger.is-active span::before,
.hamburger.is-active span::after {
    transition-delay: 0s, $button-transistion-duration;
}