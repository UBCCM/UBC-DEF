{"version":3,"sources":["abstracts/_variables.scss","components/_navigation.drawer.scss"],"names":[],"mappings":"AAoFA;EACC,2EAAyE;EACzE,uBAAyB,EACzB;;AC1ED;EACC,mBAAkB;EAClB,4CALyC;EAKzC,uCALyC;EAKzC,oCALyC;EAOzC,uBAT+B;EAW/B,mBAAkB,EAClB;;AAED;EACC,gBAAe;EACf,OAAM;EACN,SAAQ;EACR,4CAA0C;UAA1C,oCAA0C;EAC1C,4CAjByC;EAiBzC,uCAjByC;EAiBzC,oCAjByC;EAkBzC,YAAW;EAEX,0BArB8B;EAsB9B,aAzBkB;EA0BlB,aAAY;EACZ,mBAAkB;EAClB,oBAAmB,EAEnB;;AAED;EACC,cAAa;EACb,UAAS,EAYT;EAdD;IAKE,6CAA2C;YAA3C,qCAA2C,EAC3C;EANF;IASE,wCAA+B;YAA/B,gCAA+B;IAE/B,aAAY,EAEZ","file":"component.navigation.drawer.dev.css","sourcesContent":["// -----------------------------------------------------------------------------\n// This file contains all default application-wide Sass and CSS3 variables.\n// -----------------------------------------------------------------------------\n\n/// Namespace for prefixing styles\n/// Usage - add a unique prefix here, such as 'ubc-'. This will be prepended to your styles. For example, the class 'grid' would become 'ubc-grid'. It is left blank by default.\n/// @type String\n$namespace: '' !default;\n\n/// Regular font family\n/// @type List\n$text-font-stack: 'Open Sans',\n'Helvetica Neue Light',\n'Helvetica Neue',\n'Helvetica',\n'Arial',\nsans-serif !default;\n\n/// Code (monospace) font family\n/// @type List\n$code-font-stack: 'Courier New',\n'DejaVu Sans Mono',\n'Bitstream Vera Sans Mono',\n'Monaco',\nmonospace !default;\n\n// Type Variables\n$base-font-size: 16 !default; // as an integer. We convert the unit later. The default will result in 16px on desktop\n$base-line-height: 1.5 !default; // as an integer. Defines how high the line height is as a multiple of font size.\n$leading: $base-line-height * 1rem !default; // multiply the line height and add a unit. Defaults to rem.\n$default-typeface: sans-serif !default;\n$alternate-typeface: sans-serif !default;\n// TYPE SCALES:\n// 1.067 Minor Second\n// 1.125 Major Second\n// 1.200 Minor Third\n// 1.250 Major Third\n// 1.333 Perfect Fourth\n// 1.414 Augmented Fourth\n// 1.500 Perfect Fifth\n// 1.618 Golden Ratio\n$scale: 1.25 !default;\n\n// Preference is given to HSLA format\n// Online color converter: https://www.w3schools.com/colors/colors_converter.asp\n/// Copy text color\n/// @type Color\n$text-color: hsla(0, 0%, 13%, 1) !default;\n\n/// Main brand color\n/// @type Color\n$brand-color: var(--brand-color) !default;\n\n/// Light grey\n/// @type Color\n$light-grey: hsla(0, 0%, 93%, 1) !default;\n\n/// Medium grey\n/// @type Color\n$mid-grey: hsla(0, 0%, 60%, 1) !default;\n\n/// Dark grey\n/// @type Color\n$dark-grey: hsla(0, 0%, 27%, 1) !default;\n\n/// Container's maximum width\n/// @type Length\n$max-width: 1180px !default;\n\n/// Breakpoints map\n/// @prop {String} keys - Keys are identifiers mapped to a given length\n/// @prop {Map} values - Values are actual breakpoints expressed in pixels\n$breakpoints: ( 'small': 320px, 'medium': 768px, 'large': 1024px, ) !default;\n\n/// Relative or absolute URL where all assets are served from\n/// @type String\n/// @example scss - When using a CDN\n///   $base-url: 'http://cdn.example.com/assets/';\n$base-url: '/assets/' !default;\n\n/// CSS Variables\n/// Added here so we are able to use them throughout the cascade.\n// https://github.com/sasstools/sass-lint/issues/877\n// ugly hack to get around sass-lint not understanding css variables.\n:root {\n\t#{--menu--transition}: transform .195s cubic-bezier(.694, .0482, .335, 1);\n\t#{--brand-color}: #002347;\n}\n","// -----------------------------------------------------------------------------\n// This file contains all styles related to the navigation drawer component.\n// -----------------------------------------------------------------------------\n\n// local variables\n$menu--break: 320px;\n$menu--width: 300px;\n$menu--height: 60px;\n$wrapper--background-color: #fff;\n$nav--background-color: #67b5d1;\n$menu--transition: var(--menu--transition);\n\n\n.#{$namespace}grid-wrapper {\n\tposition: relative;\n\ttransition: $menu--transition;\n\t// will-change: transform;\n\tbackground-color: $wrapper--background-color;\n\t// add a background colour to prevent seeing the menu transition on load\n\toverflow-x: hidden;\n}\n\n.#{$namespace}menu--push-right {\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\ttransform: translate3d($menu--width, 0, 0);\n\ttransition: $menu--transition;\n\tz-index: -1;\n\t// put the menu below the wrapper on load so we don't see the triggered transition\n\tbackground-color: $nav--background-color;\n\twidth: $menu--width;\n\theight: 100%;\n\toverflow-x: hidden;\n\toverflow-y: overlay;\n\t// will-change: transform;\n}\n\n.#{$namespace}menu-trigger {\n\tdisplay: none;\n\tmargin: 0;\n\n\t&:checked~.#{$namespace}grid-wrapper {\n\t\ttransform: translate3d(-$menu--width, 0, 0);\n\t}\n\n\t&:checked~.#{$namespace}menu--push-right {\n\t\ttransform: translate3d(0, 0, 0);\n\t\t// width minus 20px to account for scroll area in safari\n\t\tz-index: 200;\n\t\t// move the menu above the wrapper\n\t}\n}\n"]}